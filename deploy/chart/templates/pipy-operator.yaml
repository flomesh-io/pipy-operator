apiVersion: v1
kind: ServiceAccount
metadata:
  name: flomesh-controller-manager
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: flomesh-leader-election-role
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: flomesh-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - volumes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - flomesh.io
  resources:
  - proxies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - flomesh.io
  resources:
  - proxies/finalizers
  verbs:
  - update
- apiGroups:
  - flomesh.io
  resources:
  - proxies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - flomesh.io
  resources:
  - proxyprofiles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - flomesh.io
  resources:
  - proxyprofiles/finalizers
  verbs:
  - update
- apiGroups:
  - flomesh.io
  resources:
  - proxyprofiles/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flomesh-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flomesh-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: flomesh-leader-election-rolebinding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: flomesh-leader-election-role
subjects:
- kind: ServiceAccount
  name: flomesh-controller-manager
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flomesh-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flomesh-manager-role
subjects:
- kind: ServiceAccount
  name: flomesh-controller-manager
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flomesh-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flomesh-proxy-role
subjects:
- kind: ServiceAccount
  name: flomesh-controller-manager
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 06558885.flomesh.io
kind: ConfigMap
metadata:
  name: flomesh-manager-config
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
data:
  proxy.tmpl: |-
{{ (.Files.Get "conf/injector.tpl") | indent 4 }}
kind: ConfigMap
metadata:
  name: flomesh-proxy-injector-tpl
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: flomesh-controller-manager-metrics-service
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: flomesh-pipy-sidecar-injector-service
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - port: 443
    targetPort: 7443
  selector:
    proxy-injector: pipy-sidecar-injector
---
apiVersion: v1
kind: Service
metadata:
  name: flomesh-webhook-service
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    app: flomesh
  name: flomesh-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /operator-manager
        image: "{{ .Values.flomesh.manager.repository }}:{{ .Values.flomesh.manager.tag }}"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /mgr
          name: shared-mgr-res
      serviceAccountName: flomesh-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - emptyDir: {}
        name: shared-mgr-res
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    proxy-injector: pipy-sidecar-injector
    app: flomesh
  name: flomesh-pipy-sidecar-injector
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      proxy-injector: pipy-sidecar-injector
  template:
    metadata:
      labels:
        proxy-injector: pipy-sidecar-injector
    spec:
      containers:
      - args:
        - --enable-leader-election
        - --sidecar-cfg-file=/tpl/proxy.tmpl
        - --proxy-image={{ .Values.flomesh.pjs.repository }}:{{ .Values.flomesh.pjs.tag }}
        - --proxy-init-image={{ .Values.flomesh.proxy_init.repository }}:{{ .Values.flomesh.proxy_init.tag }}
        command:
        - /proxy-injector
        image: "{{ .Values.flomesh.injector.repository }}:{{ .Values.flomesh.injector.tag }}"
        imagePullPolicy: IfNotPresent
        name: proxy-injector
        ports:
        - containerPort: 7443
          name: injector
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /tpl
          name: tpl
          readOnly: true
      serviceAccountName: flomesh-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - configMap:
          name: flomesh-proxy-injector-tpl
        name: tpl
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: flomesh-serving-cert
  namespace: {{ .Release.Namespace }}
spec:
  dnsNames:
  - flomesh-webhook-service.{{ .Release.Namespace }}.svc
  - flomesh-webhook-service.{{ .Release.Namespace }}.svc.cluster.local
  - flomesh-pipy-sidecar-injector-service.{{ .Release.Namespace }}.svc
  - flomesh-pipy-sidecar-injector-service.{{ .Release.Namespace }}.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: flomesh-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: flomesh-selfsigned-issuer
  namespace: {{ .Release.Namespace }}
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/flomesh-serving-cert
  name: flomesh-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: flomesh-webhook-service
      namespace: {{ .Release.Namespace }}
      path: /mutate-flomesh-io-v1alpha1-proxy
  failurePolicy: Fail
  name: mproxy.kb.io
  objectSelector:
    matchExpressions:
    - key: app
      operator: NotIn
      values: ["flomesh"]
  rules:
  - apiGroups:
    - flomesh.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxies
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: flomesh-webhook-service
      namespace: {{ .Release.Namespace }}
      path: /mutate-flomesh-io-v1alpha1-proxyprofile
  failurePolicy: Fail
  name: mproxyprofile.kb.io
  objectSelector:
    matchExpressions:
    - key: app
      operator: NotIn
      values: ["flomesh"]
  rules:
  - apiGroups:
    - flomesh.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxyprofiles
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/flomesh-serving-cert
  name: flomesh-sidecar-injector-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: flomesh-pipy-sidecar-injector-service
      namespace: {{ .Release.Namespace }}
      path: /inject-flomesh-io-v1alpha1-proxy
  failurePolicy: Fail
  name: injector.flomesh.kb.io
  objectSelector:
    matchExpressions:
    - key: app
      operator: NotIn
      values: ["flomesh"]
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/flomesh-serving-cert
  name: flomesh-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: flomesh-webhook-service
      namespace: {{ .Release.Namespace }}
      path: /validate-flomesh-io-v1alpha1-proxy
  failurePolicy: Fail
  name: vproxy.kb.io
  objectSelector:
    matchExpressions:
    - key: app
      operator: NotIn
      values: ["flomesh"]
  rules:
  - apiGroups:
    - flomesh.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxies
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: flomesh-webhook-service
      namespace: {{ .Release.Namespace }}
      path: /validate-flomesh-io-v1alpha1-proxyprofile
  failurePolicy: Fail
  name: vproxyprofile.kb.io
  objectSelector:
    matchExpressions:
    - key: app
      operator: NotIn
      values: ["flomesh"]
  rules:
  - apiGroups:
    - flomesh.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxyprofiles
  sideEffects: None
