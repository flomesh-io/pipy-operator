apiVersion: flomesh.io/v1
kind: Proxy
metadata:
  name: pipy-standalone-007
spec:
  mode: Standalone
  tplMode: Raw
  replicas: 1
  image: flomesh/pipy:latest
  port: 6000
  config:
    config.cfg: |
      pipy
        pipeline :6000
          decode-http-request
            prefix = a
          script
            source = parse.js
          encode-http-response
            prefix = a
    parse.js: |
      //
      // Handles a new session, returns a stream handler for it.
      //

      export default (output, context) => (
        readBody(buffer => {
          let obj = null;
          try {
            obj = JSON.parse(buffer.toString());
          } catch (e) {}
          output(new Event('messagestart'));
          output(new Buffer(JSON.stringify(obj, null, 2) + '\n'));
          output(new Event('messageend'));
        })
      );

      //
      // Creates a stream handler that collects all data chunks
      // of a complete message and returns it as a whole buffer.
      //

      const readBody = cb => {
        let buffer = null;

        return (input) => {
          if (input instanceof Buffer) {
            buffer.push(input);

          } else if (input instanceof Event) {
            switch (input.type) {
              case 'messagestart':
                buffer = new Buffer();
                break;

              case 'messageend':
                cb(buffer);
                break;
            }
          }
        }
      }
