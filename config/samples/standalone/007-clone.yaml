apiVersion: flomesh.io/v1
kind: Proxy
metadata:
  name: pipy-007
spec:
  mode: Standalone
  tplMode: Raw
  replicas: 1
  image: flomesh/pipy:latest
  port: 8080
  config:
    config.cfg: |
      pipeline 0.0.0.0:8080
          #demo clone raw traffic to external web service
          clone
              to = mirror-out
          #clone ONLY 'data' (http body) to another in-process pipeline
          decode-http-request
              variable_protocol = http_protocol
              variable_headers = http_headers.*
          clone
              to = mirror-pipeline
          encode-http-response
              protocol = ${http_protocol}
              variable_connection = http_headers.connection
              variable_keep_alive = http_headers.keep-alive
      pipeline mirror-out
          clone  
              to = count-ng-in
          proxy-tcp
              to = 127.0.0.1:4001
          clone  
              to = count-ng-out        
      pipeline count-ng-in
          decode-http-request
          count
              object_type = MessageEnd
              metric_name = total_request_to_ng
      pipeline count-ng-out
          decode-http-response
          count
              object_type = MessageEnd
              metric_name = total_response_from_ng
      pipeline mirror-pipeline
          count
              object_type = MessageStart
              metric_name = total_request_to_js
      # provide /metrics end point
      pipeline 0.0.0.0:9432
          decode-http-request
          prometheus
          encode-http-response
      pipeline 0.0.0.0:4001
          decode-http-request
              variable_protocol = http_protocol
              variable_headers = http_headers.*
          encode-http-response
              protocol = ${http_protocol}
              variable_connection = http_headers.connection
              variable_keep_alive = http_headers.keep-alive
